Version = 1.9.0.27524;
CParticleEffect	$LOCAL$/Resource
{
	OnSpawn = "$LOCAL$/Spawner";
	LayerGroups = 
	{
		"$LOCAL$/TeslaMain",
		"$LOCAL$/LightningHit",
	};
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
	Autostart = true;
}
CNEdEditorParticle_Data	$LOCAL$/EDITOR
{
	Position = float3(2.0683644e+000, 7.8271985e-001, 2.5552914e+000);
	EulerOrientation = float3(-5.8520188e+000, 5.9058910e+001, 0.0000000e+000);
	LightEulerOrientation = float3(-6.6900206e-001, 2.1749201e+000, 0.0000000e+000);
	Backdrops = "$LOCAL$/_BackdropList";
	SubEntityTreeFactory = "$LOCAL$/CEntityWithTransformsFactory_96A00101";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Probes
{
	EditorInfosIsBlockMinimized = 0;
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 1.5000000e+003;
	Descriptor = "$LOCAL$/CParticleDescriptor_AE135B2A";
	FluxFactorExpression = "Flux";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_AE135B2A
{
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_A86DAC34",
	};
	CustomEvents = 
	{
		"$LOCAL$/CParticleEventDeclaration_33B6E507",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_5566F5E7";
	States = 
	{
		"$LOCAL$/CParticleState_3AF8190E",
	};
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	ChildList = 
	{
		"$LOCAL$/Probes",
		"$LOCAL$/Flash",
	};
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_4CFA78DF
{
	Times = 
	{
		0.0000000e+000,
		6.5009765e-002,
		4.4999999e-001,
		5.0000000e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		1.7867714e-002,
		2.9478736e-002,
		1.6265951e-002,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		8.9795468e-003,
		5.3177204e-002,
		3.6763481e-003,
		4.7746004e-004,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_5566F5E7
{
	Expression = "function void	Eval()
{
	// instant kill, this is a dummy particle whose sole purpose is to probe the scene
	Life = 0.0;
}

function void	PostEval()
{
	// here, all our Position, Velocity, etc.. are in worldspace.
	// we can query the scene for intersections using these:
	float3	probeDir = vrand();
	float	halfProbeVar = ProbeLength * (0.5 * ProbeRandomVariation);
	float4	it = scene.intersect(Position, probeDir, ProbeLength + rand(-halfProbeVar, +halfProbeVar));
	
	int hasHit = it.w != infinity;
	
	float3	contactNormal = it.xyz;
	float3	toContactPoint = probeDir * it.w - contactNormal * 0.01;	// offset a bit from the contact surface;
	
	// here, we\'ll use a trick that consists of using the Velocity to
	// send a float3 information to the child layer we\'re going to trigger.
	// it knows our position (it will be instantiated there)
	// but it also needs to know the contact point we want it to shoot at.
	Velocity = toContactPoint;
	OnProbeHit.trigger(hasHit);
}
";
}
CParticleState	$LOCAL$/CParticleState_3AF8190E
{
	EditorInfosIsBlockMinimized = 0;
	StateName = "State_0";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_F67EA027
{
	Times = 
	{
		0.0000000e+000,
		4.9521124e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0000000e+000,
		1.9575076e+000,
		1.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CEntityWithTransformsFactory	$LOCAL$/CEntityWithTransformsFactory_96A00101
{
	Scripts = "$LOCAL$/CCompilerSyntaxNodeExpression_E50958D9";
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_832FE16F",
		"$LOCAL$/CParticleAttributeDeclaration_9BDD555E",
		"$LOCAL$/CParticleAttributeDeclaration_6085D8ED",
	};
}
CParticleState	$LOCAL$/CParticleState_FE8D438A
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Localspace_87E3226F",
	};
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A86DAC34
{
	FieldName = "Velocity";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleEventDeclaration	$LOCAL$/CParticleEventDeclaration_33B6E507
{
	EventName = "OnProbeHit";
	EventAction = "$LOCAL$/TeslaMain";
}
CActionFactoryParticleSpawnerBase	$LOCAL$/TeslaMain
{
	Descriptor = "$LOCAL$/CParticleDescriptor_726054D6";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_726054D6
{
	InheritInitialVelocity = 1.0000000e+000;
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_B6372CBE",
		"$LOCAL$/CParticleFieldDeclaration_2EAF5293",
		"$LOCAL$/CParticleFieldDeclaration_A37F4B52",
	};
	CustomEvents = 
	{
		"$LOCAL$/CParticleEventDeclaration_03F75AC6",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_860E8951";
	States = 
	{
		"$LOCAL$/CParticleState_10173ACB",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_860E8951
{
	Expression = "function void	Eval()
{
	Life = 0.1;
	CustomSpawnMetricScale = rand(15, 25);	// pick a range a bit smaller than at evolve: don\'t spawn branches too close to source
	CustomSpawnMetricAccum = 0.0;
}

function void	PostEval()
{
	// the Velocity we inherit from the parent trigger is set to the vector that goes
	// from our position to the contact point. as we use that vector as a velocity in units/s
	// we\'d need one second to reach the contact point.
	// as we only live 0.1 seconds, and still want to reach that destination,
	// increase the velocity by 1/0.1 = 10 :
	
	Velocity /= 0.1;
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_6977655B
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleState	$LOCAL$/CParticleState_10173ACB
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_B66CBBEA",
		"$LOCAL$/CParticleEvolver_Script_8F88CB59",
		"$LOCAL$/TeslaMainBeam",
		"$LOCAL$/TeslaSubBeamRoot",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_B66CBBEA
{
	EditorInfosIsBlockMinimized = 0;
	WorldInteractionMode = OneWay;
	DieOnContact = true;
}
CParticleEvolver_Spawner	$LOCAL$/TeslaMainBeam
{
	SpawnInterval = 5.0000001e-002;
	FirstSpawnDelay = 3.0000001e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_6296BB4F";
	FluxFunction = "$LOCAL$/CParticleSamplerCurve_F67EA027";
}
CParticleState	$LOCAL$/CParticleState_AE6FB75C
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_8D148890",
		"$LOCAL$/CParticleEvolver_Field_1D536061",
		"$LOCAL$/CParticleEvolver_Field_61875AAC",
		"$LOCAL$/CParticleEvolver_Script_3C551184",
	};
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_6296BB4F
{
	InheritInitialVelocity = 1.0000000e+000;
	Renderer = "$LOCAL$/CParticleRenderer_Ribbon_406A8A93";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_6977655B",
		"$LOCAL$/CParticleFieldDeclaration_8733F1BA",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_83944BA6",
		"$LOCAL$/CParticleSamplerCurve_02FE3605",
		"$LOCAL$/CParticleSamplerCurve_358C32D4",
		"$LOCAL$/CParticleSamplerProceduralTurbulence_1E5C843B",
		"$LOCAL$/CParticleSamplerCurve_FAAC05E5",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_B9DE44BE";
	States = 
	{
		"$LOCAL$/CParticleState_AE6FB75C",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_B9DE44BE
{
	Expression = "function void	Eval()
{
	Life = 0.3;
	ColorCoeff = ColorCoeffLookup.sample(spawner.LifeRatio) * 0.2;
}

function void	PostEval()
{
	// here, we use the same trick as in the Probes -> LightningRay layers.
	// we can reconstruct the vector from the start of the lightning to the hit-point
	// by grabbing the parent\'s velocity. (we have \'InheritInitialVelocity\' set to 1.0)
	// this works because the parent particle doesn\'t modify its velocity.
	// its physics evolver has neither gravity nor friction.
	// also, the parent particle has its velocity multiplied by 10.
	// to reconstruct the original move length, divide by 10.
	
	// here, we use the move length to scale the displacements.
	// very short lightning rays will be less displaced by the turbulence
	// than very long ones:
	
	float	scale = sqrt(length(Velocity));	// defines the scale of the \'random walk\' shape
	float	moveLength = scale * 0.8;		// defines the intensity of the \'random walk\'

	// the displacement also depends on the particle\'s location along the lighting ray.
	// we use \'spawner.LifeRatio\' for this. it\'s 0 at the start of the ray, and 1 at the end.
	float	weightLo = DisplacementWeightLo.sample(spawner.LifeRatio) * moveLength;
	float	weightHi = DisplacementWeightHi.sample(spawner.LifeRatio) * moveLength;
	
	float3	samplingPos = (Position + Velocity) / scale;
	float3	turbulenceLo = TurbLoFreq.sample(samplingPos);	// sample the turbulence.
	float3	turbulenceHi = TurbHiFreq.sample(samplingPos);	// sample the turbulence.
	
	Velocity = turbulenceHi * weightHi + float3(0,0.08,0) * weightLo; // add a small up velocity
	Position += (turbulenceLo * 0.075) * weightLo;
}
";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_8D148890
{
	EditorInfosIsBlockMinimized = 0;
}
CParticleRenderer_Ribbon	$LOCAL$/CParticleRenderer_Ribbon_406A8A93
{
	MaxParticleLifeExpected = 10;
	BillboardingMaterial = Additive_NoAlpha;
	Diffuse = "Textures/Thunder.dds";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_90F2034F
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "DisplacementWeightHi";
	Times = 
	{
		0.0000000e+000,
		4.9999997e-002,
		1.6670504e-001,
		9.0138394e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		8.9580429e-001,
		8.8351882e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		1.1672592e+000,
		6.3161239e-002,
		3.9761117e-001,
		-2.9965276e-001,
		-4.0222440e-002,
		-8.8948572e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_FAAC05E5
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "DisplacementWeightHi";
	Times = 
	{
		0.0000000e+000,
		4.9999997e-002,
		1.6670504e-001,
		9.0138394e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		8.9580429e-001,
		8.8351882e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		1.1672592e+000,
		6.3161239e-002,
		3.9761117e-001,
		-2.9965276e-001,
		-4.0222440e-002,
		-8.8948572e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_3C551184
{
	EditorInfosIsBlockMinimized = 0;
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_FD648C97";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_FD648C97
{
	Expression = "function void	Eval()
{
	Color *= ColorCoeff;
}
";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_83944BA6
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "TurbLoFreq";
	Interpolator = Quintic;
	Octaves = 1;
	Wavelength = 3.0000001e-001;
	Strength = 1.9091885e-001;
	Lacunarity = 5.0000000e-001;
	Gain = 5.0000000e-001;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_1D536061
{
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_D9406638";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_D9406638
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		1.4865017e-001,
		4.7999999e-001,
		5.1999998e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		2.3446560e-001,
		2.0432150e-001,
		7.1384251e-001,
		8.3447212e-001,
		3.0746228e-001,
		2.4899286e-001,
		7.8421211e-001,
		9.5029050e-001,
		1.0779095e+001,
		9.4640656e+000,
		5.1027214e+001,
		9.5917916e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		1.9161512e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		4.2712119e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-1.6593916e-002,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-2.0031896e-003,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-1.4828907e-003,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-1.7794693e-002,
		-2.2776297e+001,
		-1.7795555e+001,
		-9.8105202e+001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_8733F1BA
{
	FieldName = "ColorCoeff";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_02FE3605
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "ColorCoeffLookup";
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		1.0483411e+001,
		1.3673043e-001,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-1.5378418e+001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_61875AAC
{
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_4CFA78DF";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_358C32D4
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "DisplacementWeightLo";
	Times = 
	{
		0.0000000e+000,
		4.9999997e-002,
		2.1939272e-001,
		8.1198180e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		9.8125637e-001,
		9.2281586e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		1.1718175e+000,
		6.1580104e-001,
		2.1542661e+000,
		-2.0764318e+000,
		-6.5881568e-001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_26012A5E
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleEvolver_Localspace	$LOCAL$/CParticleEvolver_Localspace_87E3226F
{
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Flash
{
	EditorInfosIsBlockMinimized = 0;
	Infinite = true;
	Descriptor = "$LOCAL$/CParticleDescriptor_D0024371";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_D0024371
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_040A3BEB";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_26012A5E",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_A0287E88";
	States = 
	{
		"$LOCAL$/CParticleState_FE8D438A",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_A0287E88
{
	Expression = "function void	Eval()
{
	Life = 2;
	Size = 0.12;
	Color = float4(4,3,10,1) * 2.5;
}
";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_040A3BEB
{
	Diffuse = "Textures/FX/BB_Glow_02_64.dds";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_832FE16F
{
	AttributeName = "ProbeLength";
	AttributeDescription = "Average length of probe-rays cast in the scene\\nThe rays are randomly cast on a sphere.\\nThis attribute directly controls the radius of that sphere.";
	DefaultValueF4 = float4(3.5000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(2.0000000e+001, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_9BDD555E
{
	AttributeName = "ProbeRandomVariation";
	AttributeDescription = "Random variation on the probe-rays length.\\nAs a fraction of their original length.";
	DefaultValueF4 = float4(2.0000000e-001, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Sparks
{
	EditorInfosIsBlockMinimized = 0;
	Delay = 1.5000001e-001;
	SpawnCount = 1.0000000e+001;
	SpawnCountRelativeRandomDeviation = 5.1968497e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_E47A4733";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_E47A4733
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_68EB8B1D";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_C72A5DFB",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_697E0E01",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_C3150C72";
	States = 
	{
		"$LOCAL$/CParticleState_EEDE49A4",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_C3150C72
{
	EditorInfosIsBlockMinimized = 0;
	Expression = "function void	Eval()
{
	float	energy = pow(rand(0,1),2);
	Life = 0.15 + energy * 0.5;
	Size = 0.01;
	
	Velocity = StartVelocity.samplePosition() * (0.1 + energy * 2);
}
";
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_68EB8B1D
{
	EditorInfosIsBlockMinimized = 0;
	Diffuse = "Textures/FX/BB_Glow_02_64.dds";
	BillboardMode = VelocityCapsuleAlign;
	AxisScale = 5.0000001e-002;
}
CParticleState	$LOCAL$/CParticleState_EEDE49A4
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_CB2C1737",
		"$LOCAL$/CParticleEvolver_Field_2D1006DA",
	};
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_CB2C1737
{
	ConstantAcceleration = float3(0.0000000e+000, -2.0000000e+000, 0.0000000e+000);
}
CParticleEventDeclaration	$LOCAL$/CParticleEventDeclaration_03F75AC6
{
	EventName = "OnCollide";
	EventAction = "$LOCAL$/LightningHit";
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_697E0E01
{
	SamplerName = "StartVelocity";
	Shape = "$LOCAL$/CShapeDescriptor_7F63D458";
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_7F63D458
{
	EditorInfosIsBlockMinimized = 0;
	Position = float3(0.0000000e+000, 5.0000001e-002, 0.0000000e+000);
	ShapeType = COMPLEX_ELLIPSOID;
	Radius = 2.5000000e-001;
	CutPlane = 5.0000000e-001;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_C72A5DFB
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_2D1006DA
{
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_83F361A5";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_83F361A5
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		6.6198356e-002,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		4.7987976e+000,
		4.8907104e+000,
		2.3392933e+001,
		1.0055624e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		-1.2091320e-001,
		-4.4742250e-001,
		-2.2881224e+000,
		0.0000000e+000,
		-1.7056158e+000,
		-6.3113933e+000,
		-3.2276520e+001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CActionFactoryWithChilds	$LOCAL$/LightningHit
{
	ChildList = 
	{
		"$LOCAL$/Sparks",
		"$LOCAL$/Light",
		"$LOCAL$/HitSound",
	};
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Light
{
	Descriptor = "$LOCAL$/CParticleDescriptor_04E81ECC";
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_04E81ECC
{
	Renderer = "$LOCAL$/CParticleRenderer_Light_DCEA9FC3";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_D18902F4",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_056A7F7F";
	States = 
	{
		"$LOCAL$/CParticleState_9150CA09",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_056A7F7F
{
	Expression = "function void	Eval()
{
	Life = 0.3;
	Size = 0.8;
}
";
}
CParticleRenderer_Light	$LOCAL$/CParticleRenderer_Light_DCEA9FC3
{
	BillboardingMaterial = Lighting_SplatPass_Spec;
	LightIntensityMultiplier = 2.0000000e+000;
	LightRadiusMultiplier = 1.5000000e+000;
}
CParticleState	$LOCAL$/CParticleState_9150CA09
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Field_70F90842",
	};
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_70F90842
{
	Name = "Color";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_C3EE4B2D";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_C3EE4B2D
{
	ValueType = Float4;
	Times = 
	{
		0.0000000e+000,
		3.9999998e-001,
		5.0000000e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		5.8567774e-001,
		5.2143538e-001,
		1.3575320e+000,
		9.1626763e-001,
		1.9374053e+000,
		1.8677766e+000,
		4.6116023e+000,
		9.9309075e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		1.0274174e+000,
		1.0866412e+000,
		3.4786806e+000,
		1.1173686e+000,
		2.5685441e-001,
		2.7166036e-001,
		8.6967039e-001,
		2.7934220e-001,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_D18902F4
{
	FieldName = "Color";
	FieldType = float4;
}
CActionFactoryWithRandomChilds	$LOCAL$/HitSound
{
	Delay = 1.5000001e-001;
	ChildList = 
	{
		"$LOCAL$/SoundLayer_1",
		"$LOCAL$/SoundLayer_2",
		"$LOCAL$/SoundLayer_3",
	};
}
CActionFactorySound	$LOCAL$/SoundLayer_1
{
	SoundPath = "Sounds/lg_hit1.wav";
	Volume = 7.5119621e-001;
}
CActionFactorySound	$LOCAL$/SoundLayer_2
{
	SoundPath = "Sounds/lg_hit2.wav";
}
CActionFactorySound	$LOCAL$/SoundLayer_3
{
	SoundPath = "Sounds/lg_hit3.wav";
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_6085D8ED
{
	AttributeName = "Flux";
	AttributeDescription = "Controls the amount of probe-rays.\\nmutiplier applied to the spawn rate of the \'Probes\' layer";
	DefaultValueF4 = float4(2.5000000e-001, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E50958D9
{
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_1E5C843B
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "TurbHiFreq";
	Interpolator = Quintic;
	Octaves = 1;
	Wavelength = 3.9999999e-002;
	Strength = 2.2627415e-002;
	Lacunarity = 2.9200000e-001;
	Gain = 1.0400000e-001;
}
CParticleEvolver_Spawner	$LOCAL$/TeslaSubBeamRoot
{
	SpawnMetric = Custom;
	CustomSpawnMetricField = "CustomSpawnMetric";
	SpawnInterval = 1.0000000e+000;
	UseOrientedSpawnMatrix = true;
	FirstSpawnDelay = 3.0000001e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_9B08B240";
}
CParticleState	$LOCAL$/CParticleState_BE659A49
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_E0572D07",
		"$LOCAL$/CParticleEvolver_Spawner_EF403984",
	};
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_9B08B240
{
	InheritInitialVelocity = 1.0000000e+000;
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_71D1437D",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_9F429151",
		"$LOCAL$/CParticleSamplerProceduralTurbulence_5D1102CB",
		"$LOCAL$/CParticleSamplerCurve_63363BF5",
		"$LOCAL$/CParticleSamplerCurve_90F2034F",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_CBE81E03";
	States = 
	{
		"$LOCAL$/CParticleState_BE659A49",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_CBE81E03
{
	Expression = "function void	Eval()
{
	Life = 0.3;
	ForwardAxis = float3(0,0,1);
}

function void	PostEval()
{
	// See \'TeslaMainBeam\' layer\'s spawn-script
	
	float	scale = sqrt(length(Velocity));	// defines the scale of the \'random walk\' shape
	float	moveLength = scale * 0.8;		// defines the intensity of the \'random walk\'

	// the displacement also depends on the particle\'s location along the lighting ray.
	// we use \'spawner.LifeRatio\' for this. it\'s 0 at the start of the ray, and 1 at the end.
	float	weightLo = DisplacementWeightLo.sample(spawner.LifeRatio) * moveLength;
	float	weightHi = DisplacementWeightHi.sample(spawner.LifeRatio) * moveLength;

	float3	samplingPos = (Position + Velocity) / scale;
	float3	turbulenceLo = TurbLoFreq.sample(samplingPos);	// sample the turbulence.
	float3	turbulenceHi = TurbHiFreq.sample(samplingPos);	// sample the turbulence.
	
	Velocity = turbulenceHi * weightHi + float3(0,0.08,0) * weightLo; // add a small up velocity
	Position += (turbulenceLo * 0.075) * weightLo;
}
";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_CCE8B323
{
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_E0572D07
{
	EditorInfosIsBlockMinimized = 0;
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_9F429151
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "TurbLoFreq";
	Interpolator = Quintic;
	Octaves = 1;
	Wavelength = 3.0000001e-001;
	Strength = 1.9091885e-001;
	Lacunarity = 5.0000000e-001;
	Gain = 5.0000000e-001;
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_5D1102CB
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "TurbHiFreq";
	Interpolator = Quintic;
	Octaves = 1;
	Wavelength = 3.9999999e-002;
	Strength = 2.2627415e-002;
	Lacunarity = 2.9200000e-001;
	Gain = 1.0400000e-001;
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_63363BF5
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "DisplacementWeightLo";
	Times = 
	{
		0.0000000e+000,
		4.9999997e-002,
		2.1939272e-001,
		8.1198180e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		0.0000000e+000,
		0.0000000e+000,
		9.8125637e-001,
		9.2281586e-001,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		0.0000000e+000,
		1.1718175e+000,
		6.1580104e-001,
		2.1542661e+000,
		-2.0764318e+000,
		-6.5881568e-001,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_B6372CBE
{
	FieldName = "CustomSpawnMetric";
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_8F88CB59
{
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_E2343090";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_E2343090
{
	Expression = "function void	Eval()
{
	// update the sub-branch spawn metric
	float	metricValue = dt * CustomSpawnMetricScale;
	CustomSpawnMetric = metricValue;		// that\'s the only one used by the trail spawner
	CustomSpawnMetricAccum += metricValue;	// that\'s for us :)
	
	// when we reach 1, the particle should be spawned.
	// 	if (CustomSpawnMetricAccum > 1)
	// 	{
	//		pick a new random metric scale
	//		and reset the accumulator
	//	}
	
	int	shouldPickNewMetric = CustomSpawnMetricAccum > 1;
	CustomSpawnMetricScale = select(CustomSpawnMetricScale, rand(15, 40), shouldPickNewMetric);
	CustomSpawnMetricAccum = select(CustomSpawnMetricAccum, 0, shouldPickNewMetric);
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_2EAF5293
{
	FieldName = "CustomSpawnMetricScale";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_A37F4B52
{
	FieldName = "CustomSpawnMetricAccum";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_71D1437D
{
	FieldName = "ForwardAxis";
	FieldType = float3;
	TransformFilter = rotate;
}
CParticleEvolver_Spawner	$LOCAL$/CParticleEvolver_Spawner_EF403984
{
	SpawnMetric = Time;
	UseOrientedSpawnMatrix = true;
	ForwardAxisField = "ForwardAxis";
	FirstSpawnDelay = 1.0000000e-001;
	Descriptor = "$LOCAL$/CParticleDescriptor_536433A6";
}
CParticleState	$LOCAL$/CParticleState_EF9AD497
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_51272D5B",
		"$LOCAL$/CParticleEvolver_Spawner_CBC182AC",
	};
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_536433A6
{
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerShape_D53B59BA",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_07ED6861";
	States = 
	{
		"$LOCAL$/CParticleState_EF9AD497",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_07ED6861
{
	Expression = "function void	Eval()
{
	Life = 0.05;
	Velocity = StartVelocity.samplePosition() * 10;
}
";
}
CParticleRenderer_Ribbon	$LOCAL$/CParticleRenderer_Ribbon_6D7ACB8D
{
	MaxParticleLifeExpected = 10;
	BillboardingMaterial = Additive_NoAlpha;
	Diffuse = "Textures/Thunder.dds";
}
CParticleEvolver_Physics	$LOCAL$/CParticleEvolver_Physics_51272D5B
{
}
CParticleSamplerShape	$LOCAL$/CParticleSamplerShape_D53B59BA
{
	SamplerName = "StartVelocity";
	Shape = "$LOCAL$/CShapeDescriptor_2465BE05";
	SampleDimensionality = Volume;
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_2465BE05
{
	Position = float3(0.0000000e+000, 0.0000000e+000, 5.0000000e-001);
	EulerOrientation = float3(9.0000000e+001, 0.0000000e+000, 0.0000000e+000);
	ShapeType = CYLINDER;
	InnerRadius = 5.0000000e-001;
}
CParticleEvolver_Spawner	$LOCAL$/CParticleEvolver_Spawner_CBC182AC
{
	SpawnInterval = 2.9999999e-002;
	FirstSpawnDelay = 0.0000000e+000;
	Descriptor = "$LOCAL$/CParticleDescriptor_DA3DF18E";
}
CParticleState	$LOCAL$/CParticleState_912BC0DF
{
	StateName = "State_0";
	Evolvers = 
	{
		"$LOCAL$/CParticleEvolver_Physics_CCE8B323",
		"$LOCAL$/CParticleEvolver_Field_63EDE514",
		"$LOCAL$/CParticleEvolver_Script_D0DBEEB6",
	};
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_DA3DF18E
{
	Renderer = "$LOCAL$/CParticleRenderer_Ribbon_6D7ACB8D";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_E535FCC8",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_6BC79CCD",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_EB918869";
	States = 
	{
		"$LOCAL$/CParticleState_912BC0DF",
	};
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_EB918869
{
	Expression = "function void	Eval()
{
	Life = 0.1;
	SizeCoeff = 1 - spawner.LifeRatio;
}

function void	PostEval()
{
	float3	t = Turb.sample(Position);
	Velocity = t * 0.2;
	Position += t * 0.1 * (1 - SizeCoeff);
}";
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_6BC79CCD
{
	EditorInfosIsBlockMinimized = 0;
	SamplerName = "Turb";
	Interpolator = Quintic;
	Wavelength = 1.0000000e-001;
	Strength = 1.4142136e-001;
	Lacunarity = 2.9200000e-001;
	Gain = 1.0400000e-001;
}
CParticleEvolver_Field	$LOCAL$/CParticleEvolver_Field_63EDE514
{
	Name = "Size";
	Evaluator = "$LOCAL$/CParticleSamplerCurve_BC0D1F67";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_BC0D1F67
{
	Times = 
	{
		0.0000000e+000,
		1.0000000e+000,
	};
	FloatValues = 
	{
		3.0477569e-002,
		0.0000000e+000,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		-1.0350770e-001,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
CParticleEvolver_Script	$LOCAL$/CParticleEvolver_Script_D0DBEEB6
{
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_926338B1";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_926338B1
{
	Expression = "function void	Eval()
{
	Size *= SizeCoeff;
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_E535FCC8
{
	FieldName = "SizeCoeff";
}
CNEdEditorBackdrop_List	$LOCAL$/_BackdropList
{
	EditorInfosPosition = int2(-100, -365);
	EditorInfosIsBlockMinimized = 0;
	BackgroundLayers2D = 
	{
		"$LOCAL$/_Backdrop_Brush",
	};
	SceneLayers3D = 
	{
		"$LOCAL$/_Backdrop_Model3D",
			"$LOCAL$/_Backdrop_Light",
	};
}
CNEdEditorBackdrop_Brush	$LOCAL$/_Backdrop_Brush
{
	EditorInfosPosition = int2(-253, -417);
	LayerName = "Layer_Brush";
	BackgroundColorTop = float4(2.5000000e-001, 3.0000001e-001, 3.4999999e-001, 1.0000000e+000);
	BackgroundColorBottom = float4(2.5000000e-001, 1.8000001e-001, 1.1000000e-001, 1.0000000e+000);
}
CNEdEditorBackdrop_Model3D	$LOCAL$/_Backdrop_Model3D
{
	EditorInfosPosition = int2(-252, -371);
	EditorInfosIsBlockMinimized = 2;
	LayerName = "Layer_Model";
	ResourceModel = "meshes/venushigh.fbx";
	
Position = float3(-2.5000000e+000, -1.5000000e+000, 1.2000000e+000);
}
CNEdEditorLightFactory	$LOCAL$/_Backdrop_Light_Factory
{
	NearClipPlane = 1.0000000e+002;
	FarClipPlane = 1000.0f
	Fov = 1.1154704e+002
	LightSize = 1.0000000e-003;
	SpotFalloff = 8.8541701e-002;
	Magnitude = 1.0000000e+005;
}
CNEdEditorBackdrop_Light	$LOCAL$/_Backdrop_Light
{
	LayerName = "GlobalLight";
	UniformScale = 1.0000000;
	Position = float3(1.1233553e+002, 2.8270447e+002, 2.2297581e+002);
	EulerOrientation = float3(-4.8550171e+001, 2.6739031e+001, -9.5600376e-007);
	LightDistance = 3.7717276e+002;
	LightFactory = "$LOCAL$/_Backdrop_Light_Factory";
}
